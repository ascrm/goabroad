/**
 * ÂõΩÂÆ∂ËØ¶ÊÉÖ - ÁîüÊ¥ªTab
 * Â±ïÁ§∫ÁîüÊ¥ªÊàêÊú¨„ÄÅÊ∞îÂÄôÁéØÂ¢É„ÄÅÊñáÂåñ‰π†‰øóÁ≠â‰ø°ÊÅØ
 */

import { Ionicons } from '@expo/vector-icons';
import PropTypes from 'prop-types';
import React from 'react';
import { StyleSheet, Text, View } from 'react-native';

import { COLORS } from '@/src/constants';
import InfoCard from './InfoCard';

const LifeTab = ({ country }) => {
  // ÁîüÊ¥ªÊàêÊú¨
  const livingCosts = [
    { category: '‰ΩèÂÆø', cost: '$800-1,500/Êúà', icon: 'home' },
    { category: 'È§êÈ•Æ', cost: '$400-800/Êúà', icon: 'restaurant' },
    { category: '‰∫§ÈÄö', cost: '$100-200/Êúà', icon: 'car' },
    { category: 'ÈÄöËÆØ', cost: '$50-100/Êúà', icon: 'phone-portrait' },
    { category: 'Â®±‰πê', cost: '$200-500/Êúà', icon: 'game-controller' },
    { category: 'ÂÖ∂‰ªñ', cost: '$200-400/Êúà', icon: 'ellipsis-horizontal' },
  ];

  // Ê∞îÂÄôÁâπÁÇπ
  const climate = {
    type: 'Ê∏©Â∏¶Â§ßÈôÜÊÄßÊ∞îÂÄô',
    features: ['ÂõõÂ≠£ÂàÜÊòé', 'Â§èÂ≠£Ê∏©Êöñ', 'ÂÜ¨Â≠£ËæÉÂÜ∑', 'ÈôçÊ∞¥ÈÄÇ‰∏≠'],
    temperature: {
      summer: '20-30¬∞C',
      winter: '-5-10¬∞C',
    },
  };

  // ÊñáÂåñÁâπËâ≤
  const culture = [
    { title: 'ËØ≠Ë®ÄÁéØÂ¢É', content: 'Ëã±ËØ≠‰∏∫‰∏ªÔºåÂ§öÂÖÉÊñáÂåñÊ∞õÂõ¥' },
    { title: 'È•ÆÈ£ü‰π†ÊÉØ', content: 'Ë•øÈ§ê‰∏∫‰∏ªÔºåÂêÑÂõΩÊñôÁêÜ‰∏∞ÂØå' },
    { title: 'ÁîüÊ¥ªËäÇÂ•è', content: 'Áõ∏ÂØπÂø´ËäÇÂ•èÔºåÂ∑•‰ΩúÊïàÁéáÈ´ò' },
    { title: 'Á§æ‰∫§ÊñáÂåñ', content: 'Ê≥®ÈáçÈöêÁßÅÔºåÂ∞äÈáç‰∏™‰∫∫Á©∫Èó¥' },
  ];

  // ÂÆâÂÖ®ÊåáÊï∞
  const safety = {
    overall: 8.5,
    aspects: [
      { name: 'Ê≤ªÂÆâ', score: 8.0 },
      { name: '‰∫§ÈÄö', score: 9.0 },
      { name: 'ÂåªÁñó', score: 9.5 },
      { name: 'ÁéØÂ¢É', score: 8.0 },
    ],
  };

  // ÂÆûÁî®‰ø°ÊÅØ
  const usefulInfo = [
    {
      title: 'Á¥ßÊÄ•ÁîµËØù',
      items: ['Êä•Ë≠¶: 911', 'ÊÄ•Êïë: 911', 'ÁÅ´Ë≠¶: 911'],
    },
    {
      title: 'ÂåªÁñó‰øùÈô©',
      items: ['Âª∫ËÆÆË¥≠‰π∞ÂåªÁñó‰øùÈô©', 'ÁúãÁóÖÈúÄÊèêÂâçÈ¢ÑÁ∫¶', 'ÊÄ•ËØäË¥πÁî®ËæÉÈ´ò'],
    },
    {
      title: '‰∫§ÈÄöÂá∫Ë°å',
      items: ['ÂÖ¨ÂÖ±‰∫§ÈÄöÂèëËææ', 'ÂèØÂäûÁêÜÂ≠¶ÁîüÂç°‰ºòÊÉ†', 'ÈÉ®ÂàÜÂüéÂ∏ÇÈúÄË¶ÅÈ©æÁÖß'],
    },
  ];

  // Ê∏≤ÊüìËØÑÂàÜÊù°
  const renderScoreBar = (score) => {
    const percentage = (score / 10) * 100;
    return (
      <View style={styles.scoreBarContainer}>
        <View style={styles.scoreBar}>
          <View style={[styles.scoreBarFill, { width: `${percentage}%` }]} />
        </View>
        <Text style={styles.scoreText}>{score.toFixed(1)}</Text>
      </View>
    );
  };

  return (
    <View style={styles.container}>
      {/* ÁîüÊ¥ªÊàêÊú¨ */}
      <InfoCard title="üí∞ ÁîüÊ¥ªÊàêÊú¨" icon="cash-outline">
        <View style={styles.costsGrid}>
          {livingCosts.map((item, index) => (
            <View key={index} style={styles.costCard}>
              <View style={styles.costIcon}>
                <Ionicons name={item.icon} size={24} color={COLORS.primary[600]} />
              </View>
              <Text style={styles.costCategory}>{item.category}</Text>
              <Text style={styles.costAmount}>{item.cost}</Text>
            </View>
          ))}
        </View>
        <View style={styles.costTotal}>
          <Text style={styles.costTotalLabel}>ÊØèÊúàÊÄªËÆ°</Text>
          <Text style={styles.costTotalAmount}>$1,750-3,500</Text>
        </View>
      </InfoCard>

      {/* Ê∞îÂÄôÁéØÂ¢É */}
      <InfoCard title="üå§Ô∏è Ê∞îÂÄôÁéØÂ¢É" icon="partly-sunny-outline">
        <View style={styles.climateType}>
          <Text style={styles.climateTypeLabel}>Ê∞îÂÄôÁ±ªÂûã</Text>
          <Text style={styles.climateTypeValue}>{climate.type}</Text>
        </View>
        <View style={styles.climateFeaturesContainer}>
          <Text style={styles.featuresLabel}>Ê∞îÂÄôÁâπÁÇπ:</Text>
          <View style={styles.climateFeatures}>
            {climate.features.map((feature, index) => (
              <View key={index} style={styles.featureTag}>
                <Text style={styles.featureText}>{feature}</Text>
              </View>
            ))}
          </View>
        </View>
        <View style={styles.temperatureContainer}>
          <View style={styles.temperatureItem}>
            <Ionicons name="sunny" size={20} color={COLORS.warning[600]} />
            <Text style={styles.temperatureLabel}>Â§èÂ≠£</Text>
            <Text style={styles.temperatureValue}>{climate.temperature.summer}</Text>
          </View>
          <View style={styles.temperatureItem}>
            <Ionicons name="snow" size={20} color={COLORS.info[600]} />
            <Text style={styles.temperatureLabel}>ÂÜ¨Â≠£</Text>
            <Text style={styles.temperatureValue}>{climate.temperature.winter}</Text>
          </View>
        </View>
      </InfoCard>

      {/* ÊñáÂåñÁâπËâ≤ */}
      <InfoCard title="üé≠ ÊñáÂåñÁâπËâ≤" icon="color-palette-outline">
        {culture.map((item, index) => (
          <View key={index} style={styles.cultureItem}>
            <Text style={styles.cultureTitle}>{item.title}</Text>
            <Text style={styles.cultureContent}>{item.content}</Text>
          </View>
        ))}
      </InfoCard>

      {/* ÂÆâÂÖ®ÊåáÊï∞ */}
      <InfoCard title="üõ°Ô∏è ÂÆâÂÖ®ÊåáÊï∞" icon="shield-checkmark-outline">
        <View style={styles.safetyOverall}>
          <Text style={styles.safetyLabel}>ÁªºÂêàËØÑÂàÜ</Text>
          <Text style={styles.safetyScore}>{safety.overall}</Text>
          <View style={styles.safetyStars}>
            {[1, 2, 3, 4, 5].map((star) => (
              <Ionicons
                key={star}
                name={star <= Math.floor(safety.overall / 2) ? 'star' : 'star-outline'}
                size={18}
                color="#FFB800"
              />
            ))}
          </View>
        </View>
        <View style={styles.safetyAspects}>
          {safety.aspects.map((aspect, index) => (
            <View key={index} style={styles.safetyAspect}>
              <Text style={styles.aspectName}>{aspect.name}</Text>
              {renderScoreBar(aspect.score)}
            </View>
          ))}
        </View>
      </InfoCard>

      {/* ÂÆûÁî®‰ø°ÊÅØ */}
      <InfoCard title="üì± ÂÆûÁî®‰ø°ÊÅØ" icon="information-circle-outline">
        {usefulInfo.map((section, index) => (
          <View key={index} style={styles.infoSection}>
            <Text style={styles.infoTitle}>{section.title}</Text>
            {section.items.map((item, itemIndex) => (
              <View key={itemIndex} style={styles.infoItem}>
                <View style={styles.infoBullet} />
                <Text style={styles.infoText}>{item}</Text>
              </View>
            ))}
          </View>
        ))}
      </InfoCard>
    </View>
  );
};

LifeTab.propTypes = {
  country: PropTypes.shape({
    code: PropTypes.string,
    name: PropTypes.string,
  }).isRequired,
};

const styles = StyleSheet.create({
  container: {
    padding: 16,
  },
  costsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    gap: 12,
    marginBottom: 16,
  },
  costCard: {
    width: '48%',
    padding: 12,
    backgroundColor: COLORS.background.default,
    borderRadius: 12,
    alignItems: 'center',
  },
  costIcon: {
    width: 44,
    height: 44,
    borderRadius: 22,
    backgroundColor: COLORS.primary[50],
    alignItems: 'center',
    justifyContent: 'center',
    marginBottom: 8,
  },
  costCategory: {
    fontSize: 14,
    color: COLORS.text.secondary,
    marginBottom: 4,
  },
  costAmount: {
    fontSize: 13,
    fontWeight: '600',
    color: COLORS.text.primary,
  },
  costTotal: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingTop: 16,
    borderTopWidth: 2,
    borderTopColor: COLORS.border.default,
  },
  costTotalLabel: {
    fontSize: 16,
    fontWeight: '600',
    color: COLORS.text.primary,
  },
  costTotalAmount: {
    fontSize: 18,
    fontWeight: '700',
    color: COLORS.primary[600],
  },
  climateType: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    marginBottom: 16,
  },
  climateTypeLabel: {
    fontSize: 15,
    color: COLORS.text.secondary,
  },
  climateTypeValue: {
    fontSize: 15,
    fontWeight: '600',
    color: COLORS.text.primary,
  },
  climateFeaturesContainer: {
    marginBottom: 16,
  },
  featuresLabel: {
    fontSize: 15,
    color: COLORS.text.secondary,
    marginBottom: 8,
  },
  climateFeatures: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    gap: 8,
  },
  featureTag: {
    paddingHorizontal: 12,
    paddingVertical: 6,
    backgroundColor: COLORS.primary[50],
    borderRadius: 16,
  },
  featureText: {
    fontSize: 13,
    color: COLORS.primary[600],
    fontWeight: '500',
  },
  temperatureContainer: {
    flexDirection: 'row',
    gap: 12,
  },
  temperatureItem: {
    flex: 1,
    padding: 12,
    backgroundColor: COLORS.background.default,
    borderRadius: 12,
    alignItems: 'center',
  },
  temperatureLabel: {
    fontSize: 13,
    color: COLORS.text.secondary,
    marginTop: 6,
    marginBottom: 4,
  },
  temperatureValue: {
    fontSize: 15,
    fontWeight: '600',
    color: COLORS.text.primary,
  },
  cultureItem: {
    paddingVertical: 12,
    borderBottomWidth: 1,
    borderBottomColor: COLORS.border.light,
  },
  cultureTitle: {
    fontSize: 15,
    fontWeight: '600',
    color: COLORS.text.primary,
    marginBottom: 4,
  },
  cultureContent: {
    fontSize: 14,
    color: COLORS.text.secondary,
    lineHeight: 20,
  },
  safetyOverall: {
    alignItems: 'center',
    paddingVertical: 16,
    marginBottom: 16,
    borderBottomWidth: 1,
    borderBottomColor: COLORS.border.light,
  },
  safetyLabel: {
    fontSize: 14,
    color: COLORS.text.secondary,
    marginBottom: 8,
  },
  safetyScore: {
    fontSize: 36,
    fontWeight: '700',
    color: COLORS.primary[600],
    marginBottom: 8,
  },
  safetyStars: {
    flexDirection: 'row',
    gap: 4,
  },
  safetyAspects: {
    gap: 12,
  },
  safetyAspect: {
    gap: 8,
  },
  aspectName: {
    fontSize: 14,
    color: COLORS.text.secondary,
  },
  scoreBarContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 12,
  },
  scoreBar: {
    flex: 1,
    height: 8,
    backgroundColor: COLORS.background.default,
    borderRadius: 4,
    overflow: 'hidden',
  },
  scoreBarFill: {
    height: '100%',
    backgroundColor: COLORS.primary[600],
    borderRadius: 4,
  },
  scoreText: {
    fontSize: 14,
    fontWeight: '600',
    color: COLORS.text.primary,
    width: 32,
  },
  infoSection: {
    marginBottom: 16,
  },
  infoTitle: {
    fontSize: 15,
    fontWeight: '600',
    color: COLORS.text.primary,
    marginBottom: 8,
  },
  infoItem: {
    flexDirection: 'row',
    alignItems: 'flex-start',
    marginBottom: 6,
  },
  infoBullet: {
    width: 6,
    height: 6,
    borderRadius: 3,
    backgroundColor: COLORS.primary[600],
    marginRight: 12,
    marginTop: 7,
  },
  infoText: {
    flex: 1,
    fontSize: 14,
    color: COLORS.text.secondary,
    lineHeight: 20,
  },
});

export default LifeTab;

