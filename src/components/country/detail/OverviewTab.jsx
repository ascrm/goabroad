/**
 * ÂõΩÂÆ∂ËØ¶ÊÉÖ - Ê¶ÇËßàTab
 * Â±ïÁ§∫ÂõΩÂÆ∂ÁöÑÂü∫Êú¨‰ø°ÊÅØ„ÄÅË¥πÁî®È¢Ñ‰º∞„ÄÅ‰ºòÂä£ÂäøÁ≠â
 */

import { Ionicons } from '@expo/vector-icons';
import PropTypes from 'prop-types';
import React from 'react';
import { StyleSheet, Text, View } from 'react-native';

import { COLORS } from '@/src/constants';
import InfoCard from './InfoCard';

const OverviewTab = ({ country }) => {
  // Ê®°ÊãüÊï∞ÊçÆ
  const overviewData = {
    ratings: {
      education: 9.5,
      cost: 7.8,
      visa: 6.2,
    },
    costEstimate: {
      tuition: '$30,000 - $60,000/Âπ¥',
      living: '$15,000 - $25,000/Âπ¥',
      total: 'Á∫¶ ¬•50-80‰∏á/Âπ¥',
    },
    advantages: [
      '‰∏ñÁïåÈ°∂Â∞ñÊïôËÇ≤ËµÑÊ∫ê',
      'ÂêçÊ†°‰ºóÂ§öÔºå‰∏ì‰∏öÈÄâÊã©‰∏∞ÂØå',
      'ÊØï‰∏öÂêéOPT/CPTÂ∑•‰ΩúÊú∫‰ºö',
      'ÂàõÊñ∞Âàõ‰∏öÊ∞õÂõ¥ÊµìÂéö',
      'Â§öÂÖÉÊñáÂåñÁéØÂ¢É',
    ],
    disadvantages: [
      'Ë¥πÁî®ËæÉÈ´òÔºåÁªèÊµéÂéãÂäõÂ§ß',
      'Á≠æËØÅÊîøÁ≠ñÊ≥¢Âä®',
      'ÈÉ®ÂàÜÂú∞Âå∫Ê≤ªÂÆâÈóÆÈ¢ò',
      'ÂåªÁñóË¥πÁî®ÊòÇË¥µ',
    ],
    suitableFor: [
      'ËøΩÊ±ÇÈ°∂Â∞ñÊïôËÇ≤Ë¥®Èáè',
      'ÂÆ∂Â∫≠ÁªèÊµéÊù°‰ª∂ËæÉÂ•Ω',
      'Â∏åÊúõÁïôÁæéÂ∑•‰Ωú/ÁßªÊ∞ë',
      'ÂÖ∑Â§áËæÉÂº∫Ëã±ËØ≠ËÉΩÂäõ',
    ],
    basicInfo: {
      language: 'Ëã±ËØ≠',
      currency: 'ÁæéÂÖÉ (USD)',
      timezone: 'UTC-5 ~ UTC-8',
      duration: 'Êú¨Áßë4Âπ¥ÔºåÁ°ïÂ£´1-2Âπ¥',
    },
  };

  // Ê∏≤ÊüìËØÑÂàÜ
  const renderRating = (score) => {
    const stars = Math.floor(score / 2);
    const items = [];
    for (let i = 0; i < 5; i++) {
      items.push(
        <Ionicons
          key={i}
          name="star"
          size={16}
          color={i < stars ? '#FFB800' : COLORS.text.disabled}
        />
      );
    }
    return items;
  };

  return (
    <View style={styles.container}>
      {/* Êï∞ÊçÆÊ¶ÇËßà */}
      <InfoCard title="üìä Êï∞ÊçÆÊ¶ÇËßà" icon="bar-chart-outline">
        <View style={styles.ratingsGrid}>
          <View style={styles.ratingItem}>
            <Text style={styles.ratingLabel}>ÊïôËÇ≤Ë¥®Èáè</Text>
            <Text style={styles.ratingScore}>{overviewData.ratings.education}</Text>
            <View style={styles.stars}>{renderRating(overviewData.ratings.education)}</View>
          </View>
          <View style={styles.ratingItem}>
            <Text style={styles.ratingLabel}>ÁîüÊ¥ªÊàêÊú¨</Text>
            <Text style={styles.ratingScore}>{overviewData.ratings.cost}</Text>
            <View style={styles.stars}>{renderRating(overviewData.ratings.cost)}</View>
          </View>
          <View style={styles.ratingItem}>
            <Text style={styles.ratingLabel}>Á≠æËØÅÈöæÂ∫¶</Text>
            <Text style={styles.ratingScore}>{overviewData.ratings.visa}</Text>
            <View style={styles.stars}>{renderRating(overviewData.ratings.visa)}</View>
          </View>
        </View>
      </InfoCard>

      {/* Ë¥πÁî®È¢Ñ‰º∞ */}
      <InfoCard title="üí∞ Ë¥πÁî®È¢Ñ‰º∞" icon="cash-outline">
        <View style={styles.costItem}>
          <Text style={styles.costLabel}>Â≠¶Ë¥π</Text>
          <Text style={styles.costValue}>{overviewData.costEstimate.tuition}</Text>
        </View>
        <View style={styles.costItem}>
          <Text style={styles.costLabel}>ÁîüÊ¥ªË¥π</Text>
          <Text style={styles.costValue}>{overviewData.costEstimate.living}</Text>
        </View>
        <View style={[styles.costItem, styles.costTotal]}>
          <Text style={styles.costTotalLabel}>ÊÄªËÆ°</Text>
          <Text style={styles.costTotalValue}>{overviewData.costEstimate.total}</Text>
        </View>
      </InfoCard>

      {/* ‰ºòÂäø */}
      <InfoCard title="‚ú® ‰ºòÂäø" icon="checkmark-circle-outline">
        {overviewData.advantages.map((advantage, index) => (
          <View key={index} style={styles.listItem}>
            <View style={styles.bullet}>
              <Ionicons name="checkmark" size={16} color={COLORS.success[600]} />
            </View>
            <Text style={styles.listText}>{advantage}</Text>
          </View>
        ))}
      </InfoCard>

      {/* Âä£Âäø */}
      <InfoCard title="‚ö†Ô∏è Âä£Âäø" icon="alert-circle-outline">
        {overviewData.disadvantages.map((disadvantage, index) => (
          <View key={index} style={styles.listItem}>
            <View style={styles.bullet}>
              <Ionicons name="close" size={16} color={COLORS.error[600]} />
            </View>
            <Text style={styles.listText}>{disadvantage}</Text>
          </View>
        ))}
      </InfoCard>

      {/* ÈÄÇÂêà‰∫∫Áæ§ */}
      <InfoCard title="üéØ ÈÄÇÂêà‰∫∫Áæ§" icon="people-outline">
        {overviewData.suitableFor.map((item, index) => (
          <View key={index} style={styles.listItem}>
            <View style={styles.bulletDot} />
            <Text style={styles.listText}>{item}</Text>
          </View>
        ))}
      </InfoCard>

      {/* Âü∫Êú¨‰ø°ÊÅØ */}
      <InfoCard title="üìù Âü∫Êú¨‰ø°ÊÅØ" icon="information-circle-outline">
        <View style={styles.infoGrid}>
          <View style={styles.infoItem}>
            <Text style={styles.infoLabel}>ÂÆòÊñπËØ≠Ë®Ä</Text>
            <Text style={styles.infoValue}>{overviewData.basicInfo.language}</Text>
          </View>
          <View style={styles.infoItem}>
            <Text style={styles.infoLabel}>Ë¥ßÂ∏Å</Text>
            <Text style={styles.infoValue}>{overviewData.basicInfo.currency}</Text>
          </View>
          <View style={styles.infoItem}>
            <Text style={styles.infoLabel}>Êó∂Â∑Æ</Text>
            <Text style={styles.infoValue}>{overviewData.basicInfo.timezone}</Text>
          </View>
          <View style={styles.infoItem}>
            <Text style={styles.infoLabel}>Â≠¶Âà∂</Text>
            <Text style={styles.infoValue}>{overviewData.basicInfo.duration}</Text>
          </View>
        </View>
      </InfoCard>
    </View>
  );
};

OverviewTab.propTypes = {
  country: PropTypes.shape({
    code: PropTypes.string,
    name: PropTypes.string,
    flag: PropTypes.string,
  }).isRequired,
};

const styles = StyleSheet.create({
  container: {
    padding: 16,
  },
  ratingsGrid: {
    flexDirection: 'row',
    justifyContent: 'space-around',
  },
  ratingItem: {
    alignItems: 'center',
  },
  ratingLabel: {
    fontSize: 13,
    color: COLORS.text.secondary,
    marginBottom: 8,
  },
  ratingScore: {
    fontSize: 24,
    fontWeight: '700',
    color: COLORS.text.primary,
    marginBottom: 4,
  },
  stars: {
    flexDirection: 'row',
    gap: 2,
  },
  costItem: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingVertical: 12,
    borderBottomWidth: 1,
    borderBottomColor: COLORS.border.light,
  },
  costLabel: {
    fontSize: 15,
    color: COLORS.text.secondary,
  },
  costValue: {
    fontSize: 15,
    fontWeight: '600',
    color: COLORS.text.primary,
  },
  costTotal: {
    borderBottomWidth: 0,
    paddingTop: 16,
    borderTopWidth: 2,
    borderTopColor: COLORS.border.default,
  },
  costTotalLabel: {
    fontSize: 16,
    fontWeight: '600',
    color: COLORS.text.primary,
  },
  costTotalValue: {
    fontSize: 18,
    fontWeight: '700',
    color: COLORS.primary[600],
  },
  listItem: {
    flexDirection: 'row',
    alignItems: 'flex-start',
    marginBottom: 12,
  },
  bullet: {
    width: 20,
    height: 20,
    borderRadius: 10,
    backgroundColor: COLORS.background.default,
    alignItems: 'center',
    justifyContent: 'center',
    marginRight: 12,
    marginTop: 2,
  },
  bulletDot: {
    width: 6,
    height: 6,
    borderRadius: 3,
    backgroundColor: COLORS.primary[600],
    marginRight: 12,
    marginTop: 8,
  },
  listText: {
    flex: 1,
    fontSize: 15,
    color: COLORS.text.primary,
    lineHeight: 22,
  },
  infoGrid: {
    gap: 16,
  },
  infoItem: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  infoLabel: {
    fontSize: 15,
    color: COLORS.text.secondary,
  },
  infoValue: {
    fontSize: 15,
    fontWeight: '600',
    color: COLORS.text.primary,
  },
});

export default OverviewTab;

